// <auto-generated />
using System;
using FundManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace FundManagementAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230608191109_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Balance")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Branch_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Customer_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Product_Id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Customer_Id");

                    b.HasIndex("Product_Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Branch_Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Branch_Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Customer_DOB")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Customer_Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Customer_Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.DepositAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Account_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Balance")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Block_no")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("DepositSchema_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("Maturity_Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("Starting_Date")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("Tenure")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("autoRenewal")
                        .HasColumnType("NUMBER(10)");

                    b.Property<bool>("status")
                        .HasColumnType("NUMBER(1)");

                    b.HasKey("Id");

                    b.HasIndex("Account_Id");

                    b.HasIndex("DepositSchema_Id");

                    b.ToTable("DepositAccounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.DepositSchema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Schema_Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Schema_Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("Schema_Rate")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.ToTable("DepositSchemas");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Linked_Account", b =>
                {
                    b.Property<int>("System_User_Id")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Account_Id")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("System_User_Id", "Account_Id");

                    b.HasIndex("Account_Id")
                        .IsUnique();

                    b.ToTable("LinkedAccounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Product_Description")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.System_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("User_Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Account", b =>
                {
                    b.HasOne("FundManagementAPI.Models.dbModels.Branch", "Branch")
                        .WithMany("Accounts")
                        .HasForeignKey("Branch_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundManagementAPI.Models.dbModels.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundManagementAPI.Models.dbModels.Product", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.DepositAccount", b =>
                {
                    b.HasOne("FundManagementAPI.Models.dbModels.Account", "Account")
                        .WithMany("DepositAccounts")
                        .HasForeignKey("Account_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundManagementAPI.Models.dbModels.DepositSchema", "DepositSchema")
                        .WithMany("DepositAccounts")
                        .HasForeignKey("DepositSchema_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DepositSchema");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Linked_Account", b =>
                {
                    b.HasOne("FundManagementAPI.Models.dbModels.Account", "Account")
                        .WithOne("Linked_Account")
                        .HasForeignKey("FundManagementAPI.Models.dbModels.Linked_Account", "Account_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FundManagementAPI.Models.dbModels.System_User", "System_User")
                        .WithMany("Linked_Accounts")
                        .HasForeignKey("System_User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("System_User");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Account", b =>
                {
                    b.Navigation("DepositAccounts");

                    b.Navigation("Linked_Account");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Branch", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Customer", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.DepositSchema", b =>
                {
                    b.Navigation("DepositAccounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.Product", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("FundManagementAPI.Models.dbModels.System_User", b =>
                {
                    b.Navigation("Linked_Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
